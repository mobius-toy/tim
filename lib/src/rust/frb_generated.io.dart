// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/ble.dart';
import 'api/cmd.dart';
import 'api/log.dart';
import 'api/task.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  Map<String, String> dco_decode_Map_String_String_None(dynamic raw);

  @protected
  RustStreamSink<BleTask> dco_decode_StreamSink_ble_task_Sse(dynamic raw);

  @protected
  RustStreamSink<LogEntry> dco_decode_StreamSink_log_entry_Sse(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  BleTask dco_decode_ble_task(dynamic raw);

  @protected
  BleTaskPriority dco_decode_ble_task_priority(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  OpAction dco_decode_box_autoadd_op_action(dynamic raw);

  @protected
  OpCmd dco_decode_box_autoadd_op_cmd(dynamic raw);

  @protected
  OpRequest dco_decode_box_autoadd_op_request(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_32_loose(dynamic raw);

  @protected
  Int32List dco_decode_list_prim_i_32_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  LogEntry dco_decode_log_entry(dynamic raw);

  @protected
  LogLevel dco_decode_log_level(dynamic raw);

  @protected
  OpAction dco_decode_op_action(dynamic raw);

  @protected
  OpCmd dco_decode_op_cmd(dynamic raw);

  @protected
  OpRequest dco_decode_op_request(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  OpAction? dco_decode_opt_box_autoadd_op_action(dynamic raw);

  @protected
  OpCmd? dco_decode_opt_box_autoadd_op_cmd(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  Map<String, String> sse_decode_Map_String_String_None(
    SseDeserializer deserializer,
  );

  @protected
  RustStreamSink<BleTask> sse_decode_StreamSink_ble_task_Sse(
    SseDeserializer deserializer,
  );

  @protected
  RustStreamSink<LogEntry> sse_decode_StreamSink_log_entry_Sse(
    SseDeserializer deserializer,
  );

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  BleTask sse_decode_ble_task(SseDeserializer deserializer);

  @protected
  BleTaskPriority sse_decode_ble_task_priority(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  OpAction sse_decode_box_autoadd_op_action(SseDeserializer deserializer);

  @protected
  OpCmd sse_decode_box_autoadd_op_cmd(SseDeserializer deserializer);

  @protected
  OpRequest sse_decode_box_autoadd_op_request(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_32_loose(SseDeserializer deserializer);

  @protected
  Int32List sse_decode_list_prim_i_32_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  LogEntry sse_decode_log_entry(SseDeserializer deserializer);

  @protected
  LogLevel sse_decode_log_level(SseDeserializer deserializer);

  @protected
  OpAction sse_decode_op_action(SseDeserializer deserializer);

  @protected
  OpCmd sse_decode_op_cmd(SseDeserializer deserializer);

  @protected
  OpRequest sse_decode_op_request(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  OpAction? sse_decode_opt_box_autoadd_op_action(SseDeserializer deserializer);

  @protected
  OpCmd? sse_decode_opt_box_autoadd_op_cmd(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
    AnyhowException self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_Map_String_String_None(
    Map<String, String> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_StreamSink_ble_task_Sse(
    RustStreamSink<BleTask> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_StreamSink_log_entry_Sse(
    RustStreamSink<LogEntry> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_ble_task(BleTask self, SseSerializer serializer);

  @protected
  void sse_encode_ble_task_priority(
    BleTaskPriority self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_op_action(
    OpAction self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_op_cmd(OpCmd self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_op_request(
    OpRequest self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32_loose(
    List<int> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_prim_i_32_strict(
    Int32List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_prim_u_8_strict(
    Uint8List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_string(
    List<(String, String)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_log_entry(LogEntry self, SseSerializer serializer);

  @protected
  void sse_encode_log_level(LogLevel self, SseSerializer serializer);

  @protected
  void sse_encode_op_action(OpAction self, SseSerializer serializer);

  @protected
  void sse_encode_op_cmd(OpCmd self, SseSerializer serializer);

  @protected
  void sse_encode_op_request(OpRequest self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_op_action(
    OpAction? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_op_cmd(OpCmd? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
    Uint8List? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_string_string(
    (String, String) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
  _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
    : _lookup = dynamicLibrary.lookup;
}
