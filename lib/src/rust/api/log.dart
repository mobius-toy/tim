// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `fmt`, `fmt`

/// 日志条目结构体
class LogEntry {
  final LogLevel level;
  final String message;
  final String timestamp;
  final String module;

  const LogEntry({
    required this.level,
    required this.message,
    required this.timestamp,
    required this.module,
  });

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<LogEntry> newInstance({
    required LogLevel level,
    required String message,
    required String module,
  }) => RustLib.instance.api.crateApiLogLogEntryNew(
    level: level,
    message: message,
    module: module,
  );

  @override
  int get hashCode =>
      level.hashCode ^ message.hashCode ^ timestamp.hashCode ^ module.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LogEntry &&
          runtimeType == other.runtimeType &&
          level == other.level &&
          message == other.message &&
          timestamp == other.timestamp &&
          module == other.module;
}

/// 日志级别枚举
enum LogLevel {
  debug,
  info,
  warn,
  error;

  Future<String> asStr() => RustLib.instance.api.crateApiLogLogLevelAsStr(
    that: this,
  );
}
